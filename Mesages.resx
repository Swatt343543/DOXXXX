<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>